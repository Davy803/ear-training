/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/ejwRzEw5Z0k
 */
import { Button } from "@/components/ui/button";
import { PlayNote } from "@/components/tone/play-note";
import { sample } from "lodash";
import { useState } from "react";
import { Correct } from "@/components/component/correct";
import { Incorrect } from "@/components/component/incorrect";
import { playNotes } from "@/lib/tone/piano";
import { Note } from "tone/Tone/core/type/Units";

export interface TestOption {
  notes: Note[];
  text: string;
}

export interface TestFrameworkProps {
  headline: string;
  getOptions: () => TestOption[];
  asChord?: boolean;
}

export function TestFramework({
  headline,
  getOptions,
  asChord,
}: TestFrameworkProps) {
  const [selected, setSelected] = useState<TestOption>();
  const [isCorrect, setIsCorrect] = useState<boolean | undefined>();
  const [options, setOptions] = useState(getOptions());

  const [correctOption, setCorrectOption] = useState<TestOption>(
    sample(options) as TestOption
  );

  const correctNotes = correctOption.notes;
  return (
    <main className="w-full max-w-2xl mx-auto flex flex-col items-center gap-6 py-8 px-4">
      <div className="w-full flex flex-col items-center gap-4">
        <h2 className="text-2xl font-semibold text-gray-900 dark:text-gray-100">
          {headline}
        </h2>
        {/*<PlayNote notes={["A3", "C4", "E4"]}/>*/}
        <PlayNote notes={correctNotes} asChord={asChord} />
      </div>
      <div className="w-full grid grid-cols-2 gap-4">
        {options.map((opt) => {
          let variant = "outline" as "outline" | "correct" | "incorrect";
          if (selected) {
            if (opt === correctOption) {
              variant = "correct";
            }
            if (opt === selected && selected !== correctOption) {
              variant = "incorrect";
            }
          }
          return (
            <Button
              key={opt.text}
              className="h-16"
              variant={variant}
              onClick={async () => {
                const isCorrect = opt === correctOption;
                setIsCorrect(isCorrect);
                setSelected(opt);
                await playNotes({ notes: opt.notes, asChord });
                if (!isCorrect) {
                  await playNotes({
                    notes: correctOption.notes,
                    asChord,
                    time: asChord ? 1.5 : 1 + opt.notes.length / 2,
                  });
                }
              }}
            >
              {opt.text}
            </Button>
          );
        })}
      </div>
      {isCorrect === true ? (
        <Correct />
      ) : isCorrect === false ? (
        <Incorrect correctAnswer={correctOption} />
      ) : (
        <></>
      )}
      {isCorrect === undefined ? (
        <></>
      ) : (
        <div className="w-full flex justify-center">
          <Button
            className="w-40"
            onClick={() => {
              setIsCorrect(undefined);
              setSelected(undefined);

              const newOptions = getOptions();

              setOptions(newOptions);
              setCorrectOption(sample(newOptions) as TestOption);
            }}
          >
            Next Question
          </Button>
        </div>
      )}

      {/*<div className="w-full max-w-2xl mx-auto flex justify-between items-center px-4 py-2">*/}
      {/*    <div className="text-sm text-gray-500 dark:text-gray-400">*/}
      {/*        Score: <span className="font-bold text-red-500">10</span>*/}
      {/*    </div>*/}
      {/*    <div className="text-sm text-gray-500 dark:text-gray-400">*/}
      {/*        Streak: <span className="font-bold text-green-500">3</span>*/}
      {/*    </div>*/}
      {/*    <div className="text-sm text-gray-500 dark:text-gray-400">*/}
      {/*        Total: <span className="font-bold text-blue-500">20</span>*/}
      {/*    </div>*/}
      {/*    <div className="text-sm text-gray-500 dark:text-gray-400">*/}
      {/*        Correct: <span className="font-bold text-green-500">15</span>*/}
      {/*    </div>*/}
      {/*    <Button className="ml-4" variant="outline">*/}
      {/*        End Session*/}
      {/*    </Button>*/}
      {/*</div>*/}
    </main>
  );
}
