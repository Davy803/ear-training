"use client";

/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/ejwRzEw5Z0k
 */
import { QuizFramework } from "@/components/quizes/framework/quiz-framework";
import { NoteList } from "@/lib/note-map";
import { QuizOption } from "@/lib/quiz/quiz-option";
import { sample } from "lodash";
import { Note } from "tone/Tone/core/type/Units";

// prettier-ignore
export const IntervalStepMap: Record<string, number> = {
  "Unison": 0,
  "Minor 2nd": 1,
  "Major 2nd": 2,
  "Minor 3rd": 3,
  "Major 3rd": 4,
  "Perfect 4th": 5,
  "Tritone": 6,
  "Perfect 5th": 7,
  "Minor 6th": 8,
  "Major 6th": 9,
  "Minor 7th": 10,
  "Major 7th": 11,
  "Octave": 12
};

export function getIntervalQuizOptions(
  startingNote: Note,
  direction: "asc" | "desc" | "random",
) {
  const keys = Object.keys(IntervalStepMap);
  const realDirection =
    direction === "random" ? sample(["asc", "desc"]) : direction;

  const allOptions = keys.map((key): QuizOption => {
    const semitones = IntervalStepMap[key];
    const startingNoteIndex = NoteList.indexOf(startingNote);

    const nextNoteIndex =
      realDirection === "asc"
        ? startingNoteIndex + semitones
        : startingNoteIndex - semitones;

    return {
      uniqueId: key,
      key,
      text: key,
      hintText: `${key} (${startingNote})`,
      notes: [startingNote, NoteList[nextNoteIndex]],
      asChord: false,
      instrument: "piano",
    };
  });

  return allOptions;
}

export function IntervalQuiz() {
  return (
    <QuizFramework
      quizId="interval"
      headline={"Identify the interval"}
      getQuizOptions={() => getIntervalQuizOptions("G4", "random")}
      preventSameAnswer
    />
  );
}
