"use client";

/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/ejwRzEw5Z0k
 */
import { QuizFramework } from "@/components/quizes/framework/quiz-framework";
import { NoteList, StartingNote } from "@/lib/note-map";
import { QuizOption } from "@/lib/quiz/quiz-option";
import { InstrumentType } from "@/lib/tone/tonejs-Instruments";
import { sample } from "lodash";

// prettier-ignore
export const ChordStepMap = {
  "Minor": [0, 3, 7],
  "Major": [0, 4, 7],
  "Minor 7th": [0, 3, 7, 11],
  "Major 7th": [0, 4, 7, 10],
};

const ChordTypes = Object.keys(ChordStepMap) as ChordTypes[];

const ChordInstrumentList = [
  //   "bass-electric",
  "bassoon",
  "cello",
  //   "clarinet",
  //   "contrabass",
  //   "flute",
  //   "french-horn",
  "guitar-acoustic",
  "guitar-electric",
  "guitar-nylon",
  "harmonium",
  "harp",
  "piano",
  //   "saxophone",
  //   "trombone",
  //   "trumpet",
  //   "tuba",
  "violin",
  "xylophone",
] as InstrumentType[];

export type ChordTypes = keyof typeof ChordStepMap;

export function getChordQuizOptions(
  startingNotes: StartingNote[],
  chordTypes: ChordTypes[],
) {
  const allOptions = chordTypes.map((chordType): QuizOption => {
    const semitones = ChordStepMap[chordType];

    return {
      uniqueId: `chord-${chordType}`,
      key: `${chordType}`,
      text: `${chordType}`,
      hintText: "",
      populateNotes: () => {
        const startingNote = sample(startingNotes) as StartingNote;
        const startingNoteIndex = NoteList.indexOf(startingNote);

        const notes = semitones.map((x) => NoteList[startingNoteIndex + x]);
        return notes;
      },
      asChord: true,
    };
  });

  return allOptions;
}

export function ChordQuiz() {
  const quizOptions = getChordQuizOptions(
    ["C4", "D4", "E4", "F4", "G4"],
    ChordTypes,
  );

  return (
    <QuizFramework
      quizId="chords"
      headline={"Identify the chord"}
      quizOptions={quizOptions}
      instrumentList={ChordInstrumentList}
      asChord
    />
  );
}
